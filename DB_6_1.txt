演習6-1 ビットマップインデックスとハッシュインデックス
本文ではインデックスの種類として、B-treeインデックスのみを取り上げた
これ以外にもRDBで利用可能なインデックスには「ビットマップインデックス」や
「ハッシュインデックス」といった補助的な存在します。
これらのインデックスの長所と短所を調べよ

ビットマップインデックス
長所
B-Treeに比べて容量が少なくて済む
カーディナリティの低いカラムの検索に強い
NULLの検索も可能
AND、OR検索にも強い

短所
性能劣化が起こりやすい
Aという値をBに変えた場合に、
Aのビットマップを0にBのビットマップを1に変更する必要がある
新規登録の場合はカラムが取りうる値すべてのビットマップに対してインサートが必要
同値のビットマップは圧縮されるため、ブロック単位でのロック行数は膨大になる可能性がある

ハッシュインデックス
長所
対象列のデータ型/データ長に関わらず一定のサイズになる
uuidのようにある程度の長いデータを対象とする場合、B-Treeインデックスよりもハッシュインデックスのほうがインデックスサイズは小さくなる
等号比較する場合B-treeよりも処理が早い

短所
等号による比較しかできず、大小比較や範囲などの比較ができない
B-Treeインデックスよりハッシュインデックスのほうが生成時間がかかる傾向にある
int型のような短いデータを対象とする場合には、ハッシュインデックスは無駄にディスクを使うことになる
